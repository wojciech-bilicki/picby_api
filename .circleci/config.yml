version: 2.1
executors:
  docker-publisher:
    environment:
      IMAGE_NAME: wojciechbilicki/picby_api
    docker:
      - image: circleci/node:stretch
orbs:
  node: circleci/node@1.1.6
jobs:
  build-and-test:
    executor: docker-publisher
    steps:
      - checkout
      - node/with-cache:
          steps:
            - run: npm install
            - run: npm run build
  build-image:
    executor: docker-publisher
    steps: 
      - checkout 
      - setup_remote_docker
      - run:
          name: Build docker image
          command: docker build -t $IMAGE_NAME:latest .
      - run:
          name: Archive Docker image
          command: docker save -o image.tar $IMAGE_NAME
      - persist_to_workspace:
          root: .
          paths:
            - ./image.tar
  publish-latest:
    executor: docker-publisher
    steps:
      - attach_workspace:
          at: /tmp/workspace
      - setup_remote_docker
      - run:
          name: Load archived Docker image
          command: docker load -i /tmp/workspace/image.tar
      - run:
          name: Publish Docker Image to Docker Hub
          command:  |
            echo "$DOCKERHUB_PASS" | docker login --username $DOCKERHUB_USERNAME --password-stdin
            docker push $IMAGE_NAME:latest
  deploy:
    executor: docker-publisher
    steps:
      - add_ssh_keys:
          fingerprints: 
            "0a:b1:05:fd:2d:2f:f0:7a:34:77:b9:7e:9d:77:8d:f7"
      - run:
          name: Deploy to Digital Ocean Dokku
          command: |
            ssh root@46.101.166.26 "docker pull wojciechbilicki/picby_api:latest && docker tag wojciechbilicki/picby_api:latest dokku/picby_api:latest && dokku tags:deploy picby_api latest"

workflows:
    build-and-publish-image:
      jobs:
        - build-and-test
        - build-image:
            requires: 
              - build-and-test
            filters:
              branches: 
                only: master
        - publish-latest:
            requires:
              - build-image
            filters:
              branches:
                only: master
        - deploy:
            requires:
              - publish-latest
            filters:
              branches:
                only: master